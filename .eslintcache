[{"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\index.js":"1","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\serviceWorker.js":"2","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\App.js":"3","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\context\\LayoutContext.js":"4","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\context\\UserContext.js":"5","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\themes\\index.js":"6","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\themes\\default.js":"7","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\error\\Error.js":"9","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\login\\Login.js":"10","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\login\\styles.js":"11","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\error\\styles.js":"12","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Layout\\styles.js":"13","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\Maps.js":"14","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\Sidebar.js":"15","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\Dashboard.js":"16","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Header\\Header.js":"17","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\styles.js":"18","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Header\\styles.js":"19","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\styles.js":"20","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\Dot.js":"21","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"22","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\PageTitle\\PageTitle.js":"23","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Widget\\Widget.js":"24","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Notification\\Notification.js":"25","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Wrappers\\Wrappers.js":"26","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\UserAvatar\\UserAvatar.js":"27","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"28","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\PageTitle\\styles.js":"29","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Widget\\styles.js":"30","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Notification\\styles.js":"31","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\UserAvatar\\styles.js":"32","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\TotalOrdersChart.js":"33","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\LocationMarker.js":"34","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\infoBox.js":"35","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\SerchUser.js":"36","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\SearchErrorBox.js":"37","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allVendors\\allVendors.js":"38","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allCustomers\\allCustomers.js":"39","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allOrders\\allOrders.js":"40","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorProfile.js":"41","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerProfile.js":"42","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\ErrorPopup.js":"43","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\userReports.js":"44","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\vendorSpecificOrderChart.js":"45","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\data\\DataQuery.js":"46","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\DailyJoinedUserChart.js":"47","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\styles.js":"48","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalOrderLineChart.js":"49","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalTransactionLineChart.js":"50","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalProductLineChart.js":"51","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalUsersBarChart.js":"52","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\DailyJoinedVendors.js":"53","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\data\\RandomKey.js":"54","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\Dashboard.jsx":"55","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\Dashboard.jsx":"56","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\DashboardCards.jsx":"57","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\DashboardCards.jsx":"58","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\BarChart.jsx":"59","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\PieChart.jsx":"60","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\BarChart.jsx":"61","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\PieChart.jsx":"62","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\ContactCard.jsx":"63","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\ContactCard.jsx":"64"},{"size":1356,"mtime":1636230358181,"results":"65","hashOfConfig":"66"},{"size":4948,"mtime":1618306617000,"results":"67","hashOfConfig":"66"},{"size":1711,"mtime":1618306617000,"results":"68","hashOfConfig":"66"},{"size":1392,"mtime":1618306617000,"results":"69","hashOfConfig":"66"},{"size":1977,"mtime":1618306617000,"results":"70","hashOfConfig":"66"},{"size":502,"mtime":1618306617000,"results":"71","hashOfConfig":"66"},{"size":2987,"mtime":1618306617000,"results":"72","hashOfConfig":"66"},{"size":2854,"mtime":1635689696776,"results":"73","hashOfConfig":"66"},{"size":1571,"mtime":1618306617000,"results":"74","hashOfConfig":"66"},{"size":8577,"mtime":1632672509272,"results":"75","hashOfConfig":"66"},{"size":3133,"mtime":1618306617000,"results":"76","hashOfConfig":"66"},{"size":1334,"mtime":1618306617000,"results":"77","hashOfConfig":"66"},{"size":680,"mtime":1618306617000,"results":"78","hashOfConfig":"66"},{"size":4149,"mtime":1634115961727,"results":"79","hashOfConfig":"66"},{"size":3535,"mtime":1635689653682,"results":"80","hashOfConfig":"66"},{"size":5679,"mtime":1635839883116,"results":"81","hashOfConfig":"66"},{"size":6794,"mtime":1634843702034,"results":"82","hashOfConfig":"66"},{"size":171,"mtime":1618306617000,"results":"83","hashOfConfig":"66"},{"size":3868,"mtime":1618306617000,"results":"84","hashOfConfig":"66"},{"size":1304,"mtime":1618306617000,"results":"85","hashOfConfig":"66"},{"size":862,"mtime":1618306617000,"results":"86","hashOfConfig":"66"},{"size":4411,"mtime":1618306617000,"results":"87","hashOfConfig":"66"},{"size":427,"mtime":1618306617000,"results":"88","hashOfConfig":"66"},{"size":1971,"mtime":1632407565410,"results":"89","hashOfConfig":"66"},{"size":3296,"mtime":1618306617000,"results":"90","hashOfConfig":"66"},{"size":3790,"mtime":1618306617000,"results":"91","hashOfConfig":"66"},{"size":593,"mtime":1618306617000,"results":"92","hashOfConfig":"66"},{"size":1412,"mtime":1618306617000,"results":"93","hashOfConfig":"66"},{"size":462,"mtime":1618306617000,"results":"94","hashOfConfig":"66"},{"size":743,"mtime":1632079429699,"results":"95","hashOfConfig":"66"},{"size":993,"mtime":1618306617000,"results":"96","hashOfConfig":"66"},{"size":276,"mtime":1618306617000,"results":"97","hashOfConfig":"66"},{"size":3684,"mtime":1635449958621,"results":"98","hashOfConfig":"66"},{"size":1550,"mtime":1634115769543,"results":"99","hashOfConfig":"66"},{"size":3942,"mtime":1635786795726,"results":"100","hashOfConfig":"66"},{"size":3737,"mtime":1634116023573,"results":"101","hashOfConfig":"66"},{"size":516,"mtime":1632940692725,"results":"102","hashOfConfig":"66"},{"size":1582,"mtime":1634988013545,"results":"103","hashOfConfig":"66"},{"size":1110,"mtime":1634988062395,"results":"104","hashOfConfig":"66"},{"size":2659,"mtime":1635839554337,"results":"105","hashOfConfig":"66"},{"size":8182,"mtime":1635790985120,"results":"106","hashOfConfig":"66"},{"size":8418,"mtime":1635790129965,"results":"107","hashOfConfig":"66"},{"size":513,"mtime":1635510864000,"results":"108","hashOfConfig":"66"},{"size":1315,"mtime":1635707242232,"results":"109","hashOfConfig":"66"},{"size":3926,"mtime":1634910413557,"results":"110","hashOfConfig":"66"},{"size":1048,"mtime":1635790866514,"results":"111","hashOfConfig":"66"},{"size":3492,"mtime":1635430632350,"results":"112","hashOfConfig":"66"},{"size":2870,"mtime":1618306617000,"results":"113","hashOfConfig":"66"},{"size":2563,"mtime":1635443285469,"results":"114","hashOfConfig":"66"},{"size":2471,"mtime":1635424139403,"results":"115","hashOfConfig":"66"},{"size":3156,"mtime":1635429991612,"results":"116","hashOfConfig":"66"},{"size":2366,"mtime":1635424115282,"results":"117","hashOfConfig":"66"},{"size":3615,"mtime":1635430472616,"results":"118","hashOfConfig":"66"},{"size":346,"mtime":1635450275276,"results":"119","hashOfConfig":"66"},{"size":2930,"mtime":1635790150955,"results":"120","hashOfConfig":"66"},{"size":2866,"mtime":1635791150906,"results":"121","hashOfConfig":"66"},{"size":1256,"mtime":1635507190000,"results":"122","hashOfConfig":"66"},{"size":1256,"mtime":1635501584000,"results":"123","hashOfConfig":"66"},{"size":2256,"mtime":1635790623102,"results":"124","hashOfConfig":"66"},{"size":2194,"mtime":1635787806062,"results":"125","hashOfConfig":"66"},{"size":2232,"mtime":1635790708779,"results":"126","hashOfConfig":"66"},{"size":2116,"mtime":1635791241457,"results":"127","hashOfConfig":"66"},{"size":311,"mtime":1635507198000,"results":"128","hashOfConfig":"66"},{"size":311,"mtime":1635423690000,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1coidkg",{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"134"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\index.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\serviceWorker.js",[],["276","277"],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\App.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\context\\LayoutContext.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\context\\UserContext.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\themes\\index.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\themes\\default.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\error\\Error.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\login\\Login.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\login\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\error\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Layout\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\Maps.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport './map.css';\nimport LocationMarker from \"./LocationMarker\";\nimport InfoBox from \"./infoBox\";\nimport SearchUser from './SerchUser';\nimport SearchErrorBox from \"./SearchErrorBox\";\n\n//grapql import\nimport { gql, useQuery } from '@apollo/client';\n\n// gql query for geting all orders\nconst GET_users = gql`\n{\n  users{\n    id\n    location{\n      Latitude\n      Longitude\n    }\n    username\n  }\n}`\n\n\n// gql query for vendors\nconst GET_Vendors = gql`\n{\n  vendors{\n  \tid\n    location{\n      Latitude\n      Longitude\n    }\n    name\n    available\n\n  }\n}\n\n`\n// gql query for geting all orders\nconst GET_orders = gql`\n{\n  orders{\n    status\n    customerId\n    vendorId\n  }\n}\n`\nconst Maps=() =>{\n\n  // Customer datas From Database\n  let CustomerLocations=[]\n  const GetUsersData =()=>{\n    const {loading,error,data} = useQuery(GET_users)\n    return data\n  }\n  const users_data= GetUsersData();\n  \n  if(users_data){\n    CustomerLocations=users_data.users\n  }\n  //Finish Customer Data Fetching\n\n  //vendorsData\n  let VendorLocations=[]\n  const GetVendorsData =()=>{\n    const {loading,error,data} = useQuery(GET_Vendors )\n    return data\n  }\n  const vendors_data= GetVendorsData();\n  \n  if(vendors_data){\n    VendorLocations=vendors_data.vendors\n  }\n  //VendorDataFetchedFrom Finished Database\n\n  //Get Pending Orders From DataBase\n  let orders=[]\n  const GetOrdersData =()=>{\n    const {loading,error,data} = useQuery(GET_orders )\n    return data\n  }\n  const orders_data= GetOrdersData();\n  if(orders_data){\n    let allOrders=orders_data.orders\n    let pendingOrders=allOrders.filter((order)=>(order.status=='pending'))\n    orders=pendingOrders\n  }\n\n  //End OF pending Orders\n\n  const [center,setCenter]= useState({\n    lat:6.9271,\n    lng:79.8612\n  })\n\n  const zoom=16\n  const [locationInfo,setLocationInfo] = useState(null);\n  const [isInfoBoxShown,setInfoBoxShown]=useState(false);\n  const [isSearchErrorBoxShow,setSearchErrorBoxShow]= useState(false);\n  const [typeOfUsersToShow,setTypeofUsersToShow]= useState('all');\n  const [isActive,setActive]= useState('all');\n\n  return(\n    <div className=\"map\">\n      <GoogleMapReact\n      bootstrapURLKeys={{key:'AIzaSyBJQaGPESpG-vlcnpajwa3IY0J6MNUIdYg'}}\n      center={center}\n      defaultZoom={zoom}>\n\n\n        {VendorLocations.map((vendor)=>{\n          let specificOrder = orders.filter((order)=>(order.vendorId==vendor.id));\n          if(typeOfUsersToShow=='all' || typeOfUsersToShow=='vendor'){\n            return(\n              <LocationMarker userType=\"vendor\" specificOrder={specificOrder} isActive={isActive} key={vendor.id} lat={vendor.location.Latitude} lng={vendor.location.Longitude}  onClick={()=>{setInfoBoxShown(true);setLocationInfo({id:vendor.id,userName:vendor.name,type:'vendor',lat:vendor.location.Latitude,lng:vendor.location.Longitude,vendorOrders:specificOrder})}} />\n            )\n          }  \n        })}\n\n        {CustomerLocations.map((customer)=>{\n           let specificOrder = orders.filter((order)=>(order.customerId==customer.id));\n           if(typeOfUsersToShow=='all' || typeOfUsersToShow=='customer'){\n          return(\n            <LocationMarker userType=\"customer\"  specificOrder={specificOrder} isActive={isActive} key={customer.id} lat={customer.location.Latitude} lng={customer.location.Longitude} onClick={()=>{setInfoBoxShown(true);setLocationInfo({id:customer.id,type:'Customer',userName:customer.username,lat:customer.location.Latitude,lng:customer.location.Longitude,customerOrders:specificOrder})}} />\n          )}\n        })}\n      </GoogleMapReact>\n      \n\n      {isInfoBoxShown && locationInfo && <InfoBox info={locationInfo} isShow={setInfoBoxShown} vendorDetails={VendorLocations} customerDetails={CustomerLocations}/>}\n     \n      <SearchUser search={setCenter} setErrorMsg={setSearchErrorBoxShow} VendorLocations={VendorLocations} CustomerLocations={CustomerLocations} setTypeofUsersToShow={setTypeofUsersToShow} setActive={setActive}/>\n\n      {isSearchErrorBoxShow &&  <SearchErrorBox  setErrorMsg={setSearchErrorBoxShow}/>}\n     \n    </div>\n  )\n}\n\n\n\nexport default Maps","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\Sidebar.js",["293","294","295","296"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  //QuestionAnswer as SupportIcon,\n  //LibraryBooks as LibraryIcon,\n  //HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\n\nimport { LocalShipping ,AccountBox,LibraryBooks,PinDrop} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n/// import Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  {\n    id: 1,\n    label: \"All Vendors\",\n    link: \"/app/allVendors\",\n    icon: <LocalShipping />,\n  },\n  { id: 2, label: \"Customers\", link: \"/app/allCustomers\", icon: <AccountBox/> },\n  {\n    id: 3,\n    label: \"All Orders\",\n    link: \"/app/allOrders\",\n    icon: <LibraryBooks />,\n  },\n\n  {\n    id: 4,\n    label: \"More\",\n    link: \"/app/ui\",\n    icon: <PinDrop/>,\n    children: [\n     { label: \"Reports\", link: \"/app/ui/reports\" },\n    { label: \"Maps\", link: \"/app/ui/maps\" },\n    ],\n  },\n  \n  \n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\Dashboard.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Header\\Header.js",["297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  //Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography,\n  // Button\n   } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  \n];\n\nconst notifications = [\n  \n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n         ShopOnWheel ADMIN\n        </Typography>\n        <div className={classes.grow} />\n        \n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n             ADMIN\n            </Typography>\n            \n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          \n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\styles.js",[],["308","309"],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Header\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Widget\\Widget.js",["310","311"],"import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  //Menu,\n  //MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  header,\n  noHeaderPadding,\n  headerClass,\n  style,\n  noWidgetShadow,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n var [moreButtonRef, setMoreButtonRef] = useState(null);\n var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper} style={style && {...style}}>\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\n        [classes.noWidgetShadow]: noWidgetShadow\n        }) }}>\n        <div className={classnames(classes.widgetHeader, {\n          [classes.noPadding]: noHeaderPadding,\n          [headerClass]: headerClass\n        })}>\n          {header ? (\n            header\n          ) : (\n            <React.Fragment>\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\n                {title}\n              </Typography>\n              {!disableWidgetMenu && (\n                <IconButton\n                  color=\"primary\"\n                  classes={{ root: classes.moreButton }}\n                  aria-owns=\"widget-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={() => setMoreMenuOpen(true)}\n                  buttonRef={setMoreButtonRef}\n                >\n                  <MoreIcon />\n                </IconButton>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n\n    </div>\n  );\n}\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Widget\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\Notification\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\TotalOrdersChart.js",["312","313","314","315","316"],"import React from \"react\";\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\n//grapql BackEnd\r\nimport { gql, useQuery } from '@apollo/client';\r\nconst GET_orders = gql`\r\n{\r\n  orders{\r\n    id\r\n    createAt\r\n    paymentMethod\r\n  }\r\n}\r\n`\r\nexport default function TotalOrdersChart() {\r\n  // Get And ModiFy data\r\n    //ordersdata\r\n  const GetOrdersData =()=>{\r\n      const {loading,error,data} = useQuery(GET_orders )\r\n      return data\r\n    }\r\n    \r\n  let orders_data= GetOrdersData();\r\n  let orders=[];\r\n  let modifiedOrders=[];\r\n  if(orders_data){\r\n    orders =orders_data.orders\r\n    modifiedOrders=  orders.map((order)=>{\r\n      let dateAndtimeObject=new Date(order.createAt._seconds *1000)\r\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\r\n      return(\r\n        {\r\n          'id':order.id,\r\n          'date':dateAndTimestring,\r\n          'method':order.paymentMethod\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  //filter and get dates countwise\r\n  let chartData= CountWiseFilterForOrder(modifiedOrders)\r\n  const series = [\r\n    {\r\n      name: \"Orders\",\r\n      data: chartData.counts,\r\n    }\r\n  ];\r\n\r\n\r\n{/** \r\n  let xAxisDate=[]\r\n  if(orders_data){\r\n    orders_data.orders.forEach(order => {\r\n      \r\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\r\n      xAxisDate.push(dateAndTimestring)\r\n    });\r\n  }\r\n*/}\r\n\r\n  return (\r\n    <ApexCharts\r\n      options={{dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        width: [5, 5, 5],\r\n        curve: 'straight',\r\n        dashArray: [0, 10, 5]\r\n      },\r\n     \r\n      legend: {\r\n        tooltipHoverFormatter: function(val, opts) {\r\n          return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n        }\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        hover: {\r\n          sizeOffset: 6\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories:chartData.dates,\r\n      },\r\n      tooltip: {\r\n        y: [\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val \r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val;\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      grid: {\r\n        borderColor: '#f1f1f1',\r\n      }}}\r\n      series={series}\r\n      type=\"line\"\r\n      height={350}\r\n    />\r\n  );\r\n}\r\n\r\n///function to return for a Graph\r\n\r\nfunction CountWiseFilterForOrder(data){\r\n  let array1=[]\r\n  data.forEach(obj => {\r\n    if(!array1.includes(obj.date)){\r\n      array1.push(obj.date)\r\n    }\r\n  })\r\n  //console.log(array1)\r\n  let array2=[]\r\n  array1.forEach((date)=>{\r\n    let c=0;\r\n    let method='';\r\n    data.forEach((item)=>{\r\n      if(item.date==date){\r\n        c=c+1;\r\n      }\r\n    })\r\n    array2.push({'date':date,'count':c,'method':method})\r\n  })\r\n  \r\n  array2.sort((obj1,obj2)=>{\r\n    if(process(obj1.date)>process(obj2.date)){\r\n      return 1\r\n    }else{\r\n      return -1\r\n    }\r\n  })\r\n\r\n  function process(date){\r\n    var parts = date.split(\".\");\r\n    return new Date(parts[2], parts[1] - 1, parts[0]);\r\n }\r\n  let dateArray=[];\r\n  let countArray=[];\r\n  array2.forEach(obj => {\r\n      dateArray.push(obj.date)\r\n      countArray.push(obj.count)\r\n  })\r\n\r\n  return ({'dates':dateArray,'counts':countArray})\r\n}\r\n\r\nexport {CountWiseFilterForOrder} ;","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\LocationMarker.js",["317","318","319","320","321","322","323","324"],"import React from 'react';\r\nimport {Icon} from '@iconify/react';\r\nimport locationIcon from '@iconify/icons-mdi/rv-truck';\r\nimport locationIcon2 from '@iconify/icons-mdi/account';\r\n\r\nimport './map.css';\r\n\r\n\r\nfunction LocationMarker({lat,lng,onClick,userType,isActive,specificOrder}) {\r\n    if(isActive=='all'){\r\n        if(userType==\"vendor\"){\r\n            return (\r\n                <div className='location-marker' onClick={onClick}>\r\n                    <Icon icon={locationIcon} className=\"location-icon\" />\r\n                </div>\r\n            )\r\n        }else if(userType=='customer'){\r\n            return (\r\n                <div className='location-marker' onClick={onClick}>\r\n                    <Icon icon={locationIcon2} className=\"location-icon-customer\" />\r\n                </div>\r\n            )\r\n        }\r\n    }else if(isActive='active'){\r\n        if(userType==\"vendor\" && specificOrder.length !=0){\r\n            return (\r\n                <div className='location-marker' onClick={onClick}>\r\n                    <Icon icon={locationIcon} className=\"location-icon\" />\r\n                </div>\r\n            )\r\n        }else if(userType=='customer' && specificOrder.length !=0){\r\n            return (\r\n                <div className='location-marker' onClick={onClick}>\r\n                    <Icon icon={locationIcon2} className=\"location-icon-customer\" />\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n   \r\n    \r\n}\r\n\r\nexport default LocationMarker\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\infoBox.js",["325","326","327"],"import React from 'react';\r\nimport { useState} from 'react';\r\nimport './map.css';\r\n\r\n//close Button\r\nimport {Icon} from '@iconify/react';\r\nimport CloseIcon from '@iconify/icons-mdi/close-circle';\r\n//random key\r\nimport {getRandomKeyGenerator} from '../data/RandomKey';\r\n//geo code\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"AIzaSyBJQaGPESpG-vlcnpajwa3IY0J6MNUIdYg\");\r\nGeocode.setLanguage(\"en\");\r\nGeocode.setLocationType(\"ROOFTOP\");\r\n\r\n\r\nfunction InfoBox({info,isShow,vendorDetails,customerDetails}) {\r\n    let lat=info.lat.toString();let lng=info.lng.toString()\r\n    const [address,setAddress]= useState('');\r\n    let city, state, country;\r\n    Geocode.fromLatLng(lat,lng).then(\r\n        (response) => {\r\n          for (let i = 0; i < response.results[0].address_components.length; i++) {\r\n            for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\r\n              switch (response.results[0].address_components[i].types[j]) {\r\n                case \"locality\":\r\n                  city = response.results[0].address_components[i].long_name;\r\n                  break;\r\n                case \"administrative_area_level_1\":\r\n                  state = response.results[0].address_components[i].long_name;\r\n                  break;\r\n                case \"country\":\r\n                  country = response.results[0].address_components[i].long_name;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n          let out =`${city},${state},${country}`\r\n          setAddress(out)\r\n        },\r\n        (error) => {\r\n          setAddress('undifined')\r\n        }\r\n      );\r\n    //Finish getting address\r\n\r\n    if(info.type==='vendor'){\r\n        return (\r\n            <div className=\"location-info\" title=\"infoBox\">\r\n                <Icon icon={CloseIcon} className=\"location-icon-close\" onClick={()=>isShow(false)} />\r\n                <h4>Location Information of vendor</h4>\r\n                <ul>\r\n                    <li>User:<strong>Vendor</strong></li>\r\n                    <li>name:<strong>{info.userName}</strong></li>\r\n                    <li>Location:<strong>{address}</strong></li>\r\n                    {info.vendorOrders.length!==0 &&<h3 className=\"DeliveryText\">Pending Orders</h3>}\r\n\r\n                    {info.vendorOrders.map((order)=>{\r\n                        let customer =customerDetails.filter((customer)=>(customer.id===order.customerId))\r\n                        if(customer.length!==0){\r\n                          return(\r\n                            <li key={getRandomKeyGenerator(10)}>{`Drive to deliver order to Customer:${customer[0].username}`}</li>\r\n                        )   \r\n                        }            \r\n                    })}\r\n                   \r\n                </ul>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"location-info\" title=\"infoBox\">\r\n                <Icon icon={CloseIcon} className=\"location-icon-close\" onClick={()=>isShow(false)} />\r\n                <h4>Location Information of Customer</h4>\r\n                <ul key={getRandomKeyGenerator(10)}>\r\n                    <li>Name:<strong>{info.userName}</strong></li>\r\n                    <li>Location:<strong>{address}</strong></li> \r\n                    {info.customerOrders.length!==0 &&   <h3 className=\"DeliveryText\">Waiting Orders</h3>}\r\n                  \r\n                    {info.customerOrders.map((order)=>{\r\n                        let vendor =vendorDetails.filter((vendor)=>(vendor.id===order.vendorId))\r\n                        if(vendor.length!==0){\r\n                          return(\r\n                            <li key={getRandomKeyGenerator(10)}>{`waiting for order delivery by :${vendor[0].name}`}</li>\r\n                        )  \r\n                        }              \r\n                    })}\r\n                   \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default InfoBox\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\SerchUser.js",["328","329","330","331"],"import React from 'react';\r\nimport './map.css';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TextField from '@mui/material/TextField';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n\r\nfunction SerchUser({search,setErrorMsg,VendorLocations,CustomerLocations,setTypeofUsersToShow,setActive}) {\r\n    //for filter \r\n  const [type, setType] = React.useState('all');\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    setTypeofUsersToShow(event.target.value)\r\n  };\r\n\r\n  //for active users\r\n  const [isActive, setIsActive] = React.useState('all');\r\n\r\n  const handleActiveChange = (event) => {\r\n    setIsActive(event.target.value);\r\n    setActive(event.target.value);\r\n  };\r\n\r\n  // for search user\r\n    const [userId,setuserId]= React.useState(''); \r\n    const changeHandler=(e)=>{\r\n        setuserId(e.target.value)\r\n    }\r\n    const searchHandle=()=>{\r\n        //fetch user or vendor From list of datas\r\n        console.log(userId,VendorLocations,CustomerLocations)\r\n        const vendor =VendorLocations.filter((vendor)=>{return(vendor.name==userId)});\r\n        const customer =CustomerLocations.filter((customer)=>{return(customer.username==userId)});\r\n        let location={}\r\n        if(customer.length!=0){\r\n            location.lat=customer[0].location.Latitude;location.lng=customer[0].location.Longitude\r\n        }else if(vendor.length!=0){\r\n            location.lat=vendor[0].location.Latitude;location.lng=vendor[0].location.Longitude\r\n        }else{\r\n            setErrorMsg(true)\r\n        }\r\n        search(location);\r\n    }\r\n    return (\r\n\r\n        <div className=\"search\">\r\n        <Toolbar>\r\n        <TextField\r\n            id=\"input-with-icon-textfield\"\r\n            label=\"SearchBy Name\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n        variant=\"standard\"\r\n        onChange={(eve)=>{changeHandler(eve)}}\r\n         />\r\n          <SearchIcon onClick={searchHandle}  />\r\n         \r\n         <div className=\"filter\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">User Type</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={type}\r\n                label=\"User Type\"\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={'all'}>ALL</MenuItem>\r\n                <MenuItem value={'customer'}>Customer</MenuItem>\r\n                <MenuItem value={'vendor'}>Vendor</MenuItem>\r\n            </Select>\r\n            </FormControl>\r\n         </div>\r\n\r\n         <div className=\"filter\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">Active?</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={isActive}\r\n                label=\"User Type\"\r\n                onChange={handleActiveChange}\r\n            >\r\n                <MenuItem value={'all'}>ALL</MenuItem>\r\n                <MenuItem value={'active'}>Active</MenuItem>\r\n            </Select>\r\n            </FormControl>\r\n         </div>\r\n        </Toolbar>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SerchUser\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\maps\\SearchErrorBox.js",["332","333"],"import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport './map.css';\r\n\r\n//close Button\r\nimport {Icon} from '@iconify/react';\r\nimport CloseIcon from '@iconify/icons-mdi/close-circle';\r\n\r\nfunction SearchErrorBox({setErrorMsg}) {\r\n    return (\r\n        <div className=\"SearchError\">\r\n             <Icon icon={CloseIcon} className=\"searchError-close\" onClick={()=>{setErrorMsg(false)}}/>\r\n            <h4>Error Check the User Name</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchErrorBox\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allVendors\\allVendors.js",["334","335","336"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n\n// Vendors data from gql\nimport { gql, useQuery} from '@apollo/client';\n\n// gql query\nimport {GET_Vendors} from \"../data/DataQuery\";\n\nexport default function VendorTables() {\n  \n  const GetVendorsData =()=>{\n    const {loading,error,data} = useQuery(GET_Vendors)\n    return data\n  }\n  const vendors_data= GetVendorsData();\n  \n  if (vendors_data){\n      return (\n        <>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <MUIDataTable\n                title=\"Vendor List\"\n                data={vendors_data.vendors}\n                columns={[\"name\", \"email\",\"registrationNumber\",\"rating\", \"priceRating\",\"id\"]}\n                options={{\n                  filterType: \"checkbox\",\n                  downloadOptions:{\n                    filterOptions:{\n                      useDisplayedColumnsOnly:true,\n                      useDisplayedRowsOnly:true\n                    }\n                  },\n                  selectableRows:false\n                }}\n              />\n            </Grid>\n                </Grid>\n        </>\n      );\n    \n  }else{\n    return(\n      <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <MUIDataTable\n            title=\"vendors List\"\n            data={[]}\n            columns={[\"name\", \"rating\", \"City\", \"State\"]}\n            options={{\n              filterType: \"checkbox\",\n             \n            }}\n          />\n        </Grid>\n            </Grid>\n    </>\n    )\n  }\n \n \n}\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allCustomers\\allCustomers.js",["337","338"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n//grapql import\nimport { useQuery} from '@apollo/client';\n\nimport {GET_users} from '../data/DataQuery';\n\nlet datatableData = [];\n\nexport default function Tables() {\n  function GetUsersData(){\n    const {loading,error,data} = useQuery(GET_users)\n    return data\n  }\n  const users_data= GetUsersData();\n  \n  if(users_data){\n    datatableData= users_data.users;\n    console.log(users_data)\n  }\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <MUIDataTable\n            title=\"customers List\"\n            data={datatableData}\n            columns={[\"username\", \"email\", \"mobile\", \"paymentMethod\",'language','lastname',\"id\"]}\n            options={{\n            filterType: \"checkbox\",\n            downloadOptions:{\n            filterOptions:{\n            useDisplayedColumnsOnly:true,\n            useDisplayedRowsOnly:true\n            }\n              },\n            selectableRows:false\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\allOrders\\allOrders.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorProfile.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerProfile.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\ErrorPopup.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\userReports.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\vendorSpecificOrderChart.js",["339","340","341","342","343","344"],"import React from \"react\";\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\n//grapql BackEnd\r\nimport { gql, useQuery } from '@apollo/client';\r\nconst GET_orders = gql`\r\n{\r\n  orders{\r\n    id\r\n    createAt\r\n    paymentMethod\r\n    vendorId\r\n  }\r\n}\r\n`\r\nexport default function SpecificVendorTotalOrdersChart({specificVendorID}) {\r\n    console.log('fromNew Chart',specificVendorID)\r\n  // Get And ModiFy data\r\n    //ordersdata\r\n  const GetOrdersData =()=>{\r\n      const {loading,error,data} = useQuery(GET_orders )\r\n      return data\r\n    }\r\n    \r\n  let orders_data= GetOrdersData();\r\n  let orders=[];\r\n  let modifiedOrders=[];\r\n  if(orders_data){\r\n    orders =orders_data.orders.filter((item)=>(item.vendorId==specificVendorID))\r\n    modifiedOrders=  orders.map((order)=>{\r\n      let dateAndtimeObject=new Date(order.createAt._seconds *1000)\r\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\r\n      return(\r\n        {\r\n          'id':order.id,\r\n          'date':dateAndTimestring,\r\n          'method':order.paymentMethod\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  //filter and get dates countwise\r\n  let chartData= CountWiseFilterForSpecificOrder(modifiedOrders)\r\n  console.log('new console.log',chartData)\r\n  const series = [\r\n    {\r\n      name: \"Orders\",\r\n      data: chartData.counts,\r\n    }\r\n  ];\r\n\r\n  var theme = useTheme();\r\n\r\n{/** \r\n  let xAxisDate=[]\r\n  if(orders_data){\r\n    orders_data.orders.forEach(order => {\r\n      \r\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\r\n      xAxisDate.push(dateAndTimestring)\r\n    });\r\n  }\r\n*/}\r\n\r\n  return (\r\n    <ApexCharts\r\n      options={{dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        width: [5, 5, 5],\r\n        curve: 'straight',\r\n        dashArray: [0, 10, 5]\r\n      },\r\n     \r\n      legend: {\r\n        tooltipHoverFormatter: function(val, opts) {\r\n          return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n        }\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        hover: {\r\n          sizeOffset: 6\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories:chartData.dates,\r\n      },\r\n      tooltip: {\r\n        y: [\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val\r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val \r\n              }\r\n            }\r\n          },\r\n          {\r\n            title: {\r\n              formatter: function (val) {\r\n                return val;\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      grid: {\r\n        borderColor: '#f1f1f1',\r\n      }}}\r\n      series={series}\r\n      type=\"line\"\r\n      height={350}\r\n    />\r\n  );\r\n}\r\n\r\n///function to return for a Graph\r\n\r\nfunction CountWiseFilterForSpecificOrder(data){\r\n  let array1=[]\r\n  data.forEach(obj => {\r\n    if(!array1.includes(obj.date)){\r\n      array1.push(obj.date)\r\n    }\r\n  })\r\n  //console.log(array1)\r\n  let array2=[]\r\n  array1.forEach((date)=>{\r\n    let c=0;\r\n    let method='';\r\n    data.forEach((item)=>{\r\n      if(item.date==date){\r\n        c=c+1;\r\n      }\r\n    })\r\n    array2.push({'date':date,'count':c,'method':method})\r\n  })\r\n  \r\n  array2.sort((obj1,obj2)=>{\r\n    if(process(obj1.date)>process(obj2.date)){\r\n      return 1\r\n    }else{\r\n      return -1\r\n    }\r\n  })\r\n\r\n  function process(date){\r\n    var parts = date.split(\".\");\r\n    return new Date(parts[2], parts[1] - 1, parts[0]);\r\n }\r\n  let dateArray=[];\r\n  let countArray=[];\r\n  array2.forEach(obj => {\r\n      dateArray.push(obj.date)\r\n      countArray.push(obj.count)\r\n  })\r\n\r\n  return ({'dates':dateArray,'counts':countArray})\r\n}\r\n\r\nexport {CountWiseFilterForSpecificOrder} ;",["345","346"],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\data\\DataQuery.js",["347","348"],"import { gql, useQuery,ApolloProvider} from '@apollo/client';\r\n\r\nconst GET_users = gql`\r\n{\r\n  users{\r\n    id\r\n    createAt\r\n    language\r\n    lastname\r\n    email\r\n    mobile\r\n    paymentMethod\r\n    username\r\n    address{\r\n      city\r\n      street\r\n    }\r\n  }\r\n}`\r\n\r\nconst GET_Vendors = gql`\r\n{\r\n  vendors{\r\n  \tid\r\n  \tcreateAt\r\n    email\r\n    duration\r\n    location{\r\n      Latitude\r\n      Longitude\r\n    }\r\n    name\r\n    priceRating\r\n    courier{\r\n      name\r\n    }\r\n    rating\r\n    registrationNumber\r\n    available\r\n    address{\r\n      city\r\n      street\r\n    }\r\n\r\n  }\r\n}\r\n\r\n`\r\nconst GET_orders = gql`\r\n{\r\n  orders{\r\n    id\r\n    totalPrice\r\n    status\r\n    createAt\r\n    transactionId\r\n    customerId\r\n    vendorId\r\n    paymentMethod\r\n    items{\r\n      product\r\n      count\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst GET_products = gql`\r\n{\r\n    products{\r\n      id\r\n      vendorId\r\n      photo\r\n      name\r\n    }\r\n}\r\n`\r\nconst GET_categories=gql`\r\n{\r\n  categories{\r\n   id\r\n  }\r\n}\r\n`\r\n\r\n\r\nexport {GET_users,GET_Vendors,GET_orders,GET_products,GET_categories}\r\n\r\n\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\DailyJoinedUserChart.js",["349","350"],"import React from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {GET_users} from '../../data/DataQuery'\nimport { gql, useQuery } from '@apollo/client';\n\n\nexport default function ApexLineChart() {\n\n  //geting customer details for graph \n  const GetCustomerData =()=>{\n    const {data} = useQuery(GET_users)\n    return data\n  }  \n  let customers_data= GetCustomerData();\n  let customers=[];\n  let modifiedCustomers=[];\n  if(customers_data){\n    customers =customers_data.users\n    modifiedCustomers=  customers.map((customer)=>{\n      let dateAndtimeObject=new Date(customer.createAt._seconds *1000)\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\n      return(\n        {\n          'id':customer.id,\n          'date':dateAndTimestring,\n        }\n      )\n    })\n  }\n  let chartCustomerData= CountWiseFilterForUser(modifiedCustomers)\n\n  //finished Geting Customer Details\n\n\n  const users = [\n    {\n      name: \"Customers\",\n      data: chartCustomerData.counts,\n      \n    },\n  ];\n\n\n  return (\n      <div>\n    <ApexCharts\n      options={{\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [5, 7, 5],\n          curve: 'straight',\n          dashArray: [0, 8, 5]\n        },\n       \n        legend: {\n          tooltipHoverFormatter: function(val, opts) {\n            return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n          }\n        },\n        markers: {\n          size: 0,\n          hover: {\n            sizeOffset: 6\n          }\n        },\n        xaxis: {\n          categories: chartCustomerData.dates,\n        },\n        tooltip: {\n          y: [\n            {\n              title: {\n                formatter: function (val) {\n                  return val\n                }\n              }\n            },\n            {\n              title: {\n                formatter: function (val) {\n                  return val \n                }\n              }\n            },\n            {\n              title: {\n                formatter: function (val) {\n                  return val;\n                }\n              }\n            }\n          ]\n        },\n        grid: {\n          borderColor: '#f1f1f1',\n        }\n        }}\n\n      series={users}\n      type=\"line\"\n      height={350}\n    /> \n    </div>\n  );\n}\n\n\n///function to return for a Graph\n//input format -->[{id:1,date:'26.5.2021'},{id:2,date:'26.5.2021'},{id:3,date:'27.5.2021'},{id:4,date:'27.5.2021'}]\n//output format--> {'counts':[2,2],'dates':['26.5.2021','27.5.2021']}\nfunction CountWiseFilterForUser(data){\n  let array1=[]\n  data.forEach(obj => {\n    if(!array1.includes(obj.date)){\n      array1.push(obj.date)\n    }\n  })\n  //console.log(array1)\n  let array2=[]\n  array1.forEach((date)=>{\n    let c=0;\n    let method='';\n    data.forEach((item)=>{\n      if(item.date==date){\n        c=c+1;\n      }\n    })\n    array2.push({'date':date,'count':c,'method':method})\n  })\n  \n  array2.sort((obj1,obj2)=>{\n    if(process(obj1.date)>process(obj2.date)){\n      return 1\n    }else{\n      return -1\n    }\n  })\n\n  function process(date){\n    var parts = date.split(\".\");\n    return new Date(parts[2], parts[1] - 1, parts[0]);\n }\n  let dateArray=[];\n  let countArray=[];\n  array2.forEach(obj => {\n      dateArray.push(obj.date)\n      countArray.push(obj.count)\n  })\n\n  return ({'dates':dateArray,'counts':countArray})\n}\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalOrderLineChart.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalTransactionLineChart.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalProductLineChart.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\dashboard\\components\\TotalUsersBarChart.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\charts\\components\\DailyJoinedVendors.js",["351"],"import React from \"react\";\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {GET_Vendors} from '../../data/DataQuery'\r\nimport { useQuery } from '@apollo/client';\r\n\r\n\r\nexport default function DailyJoinedVendors() {\r\n\r\n\r\n  //geting customer details for graph \r\n  const GetVendorData =()=>{\r\n    const {data} = useQuery(GET_Vendors)\r\n    return data\r\n  }  \r\n  let vendors_data= GetVendorData();\r\n  let vendors=[];\r\n  let modifiedVendors=[];\r\n  if(vendors_data){\r\n    vendors =vendors_data.vendors\r\n    modifiedVendors=  vendors.map((vendor)=>{\r\n      let dateAndtimeObject=new Date(vendor.createAt._seconds *1000)\r\n      let dateAndTimestring =`${dateAndtimeObject.getDate()}.${dateAndtimeObject.getMonth()}.${dateAndtimeObject.getFullYear()}`\r\n      return(\r\n        {\r\n          'id':vendor.id,\r\n          'date':dateAndTimestring,\r\n        }\r\n      )\r\n    })\r\n  }\r\n  let chartVendorsData= CountWiseFilterForUser(modifiedVendors)\r\n\r\n  //finished Geting Customer Details\r\n\r\n  const users = [\r\n  \r\n    {\r\n      name: \"Vendors\",\r\n      data: chartVendorsData.counts,\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n      <div>\r\n    <ApexCharts\r\n      options={{\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          width: [5, 7, 5],\r\n          curve: 'straight',\r\n          dashArray: [0, 8, 5]\r\n        },\r\n       \r\n        legend: {\r\n          tooltipHoverFormatter: function(val, opts) {\r\n            return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n          }\r\n        },\r\n        markers: {\r\n          size: 0,\r\n          hover: {\r\n            sizeOffset: 6\r\n          }\r\n        },\r\n        xaxis: {\r\n          categories: chartVendorsData.dates,\r\n        },\r\n        tooltip: {\r\n          y: [\r\n            {\r\n              title: {\r\n                formatter: function (val) {\r\n                  return val\r\n                }\r\n              }\r\n            },\r\n            {\r\n              title: {\r\n                formatter: function (val) {\r\n                  return val \r\n                }\r\n              }\r\n            },\r\n            {\r\n              title: {\r\n                formatter: function (val) {\r\n                  return val;\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        grid: {\r\n          borderColor: '#f1f1f1',\r\n        }\r\n        }}\r\n\r\n      series={users}\r\n      type=\"line\"\r\n      height={350}\r\n    /> \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n///function to return for a Graph\r\n//input format -->[{id:1,date:'26.5.2021'},{id:2,date:'26.5.2021'},{id:3,date:'27.5.2021'},{id:4,date:'27.5.2021'}]\r\n//output format--> {'counts':[2,2],'dates':['26.5.2021','27.5.2021']}\r\nfunction CountWiseFilterForUser(data){\r\n  let array1=[]\r\n  data.forEach(obj => {\r\n    if(!array1.includes(obj.date)){\r\n      array1.push(obj.date)\r\n    }\r\n  })\r\n  //console.log(array1)\r\n  let array2=[]\r\n  array1.forEach((date)=>{\r\n    let c=0;\r\n    let method='';\r\n    data.forEach((item)=>{\r\n      if(item.date==date){\r\n        c=c+1;\r\n      }\r\n    })\r\n    array2.push({'date':date,'count':c,'method':method})\r\n  })\r\n  \r\n  array2.sort((obj1,obj2)=>{\r\n    if(process(obj1.date)>process(obj2.date)){\r\n      return 1\r\n    }else{\r\n      return -1\r\n    }\r\n  })\r\n\r\n  function process(date){\r\n    var parts = date.split(\".\");\r\n    return new Date(parts[2], parts[1] - 1, parts[0]);\r\n }\r\n  let dateArray=[];\r\n  let countArray=[];\r\n  array2.forEach(obj => {\r\n      dateArray.push(obj.date)\r\n      countArray.push(obj.count)\r\n  })\r\n\r\n  return ({'dates':dateArray,'counts':countArray})\r\n}\r\n","C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\data\\RandomKey.js",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\Dashboard.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\Dashboard.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\DashboardCards.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\DashboardCards.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\BarChart.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\PieChart.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\BarChart.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\PieChart.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\VendorCharts\\ContactCard.jsx",[],"C:\\Users\\PTS\\Desktop\\New folder\\react-material-admin-master\\src\\pages\\userReports\\CustomerCharts\\ContactCard.jsx",[],{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":57,"column":12,"nodeType":"358","messageId":"359","endLine":57,"endColumn":19},{"ruleId":"356","severity":1,"message":"360","line":57,"column":20,"nodeType":"358","messageId":"359","endLine":57,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":70,"column":12,"nodeType":"358","messageId":"359","endLine":70,"endColumn":19},{"ruleId":"356","severity":1,"message":"360","line":70,"column":20,"nodeType":"358","messageId":"359","endLine":70,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":83,"column":12,"nodeType":"358","messageId":"359","endLine":83,"endColumn":19},{"ruleId":"356","severity":1,"message":"360","line":83,"column":20,"nodeType":"358","messageId":"359","endLine":83,"endColumn":25},{"ruleId":"361","severity":1,"message":"362","line":89,"column":62,"nodeType":"363","messageId":"364","endLine":89,"endColumn":64},{"ruleId":"365","severity":1,"message":"366","line":115,"column":38,"nodeType":"367","messageId":"368","endLine":115,"endColumn":40},{"ruleId":"361","severity":1,"message":"362","line":116,"column":69,"nodeType":"363","messageId":"364","endLine":116,"endColumn":71},{"ruleId":"361","severity":1,"message":"362","line":117,"column":31,"nodeType":"363","messageId":"364","endLine":117,"endColumn":33},{"ruleId":"361","severity":1,"message":"362","line":117,"column":59,"nodeType":"363","messageId":"364","endLine":117,"endColumn":61},{"ruleId":"365","severity":1,"message":"366","line":124,"column":42,"nodeType":"367","messageId":"368","endLine":124,"endColumn":44},{"ruleId":"361","severity":1,"message":"362","line":125,"column":72,"nodeType":"363","messageId":"364","endLine":125,"endColumn":74},{"ruleId":"361","severity":1,"message":"362","line":126,"column":32,"nodeType":"363","messageId":"364","endLine":126,"endColumn":34},{"ruleId":"361","severity":1,"message":"362","line":126,"column":60,"nodeType":"363","messageId":"364","endLine":126,"endColumn":62},{"ruleId":"356","severity":1,"message":"369","line":5,"column":24,"nodeType":"358","messageId":"359","endLine":5,"endColumn":41},{"ruleId":"356","severity":1,"message":"370","line":6,"column":17,"nodeType":"358","messageId":"359","endLine":6,"endColumn":31},{"ruleId":"356","severity":1,"message":"371","line":7,"column":17,"nodeType":"358","messageId":"359","endLine":7,"endColumn":31},{"ruleId":"356","severity":1,"message":"372","line":8,"column":16,"nodeType":"358","messageId":"359","endLine":8,"endColumn":25},{"ruleId":"356","severity":1,"message":"373","line":6,"column":3,"nodeType":"358","messageId":"359","endLine":6,"endColumn":12},{"ruleId":"356","severity":1,"message":"374","line":14,"column":18,"nodeType":"358","messageId":"359","endLine":14,"endColumn":26},{"ruleId":"356","severity":1,"message":"369","line":15,"column":24,"nodeType":"358","messageId":"359","endLine":15,"endColumn":41},{"ruleId":"356","severity":1,"message":"375","line":17,"column":13,"nodeType":"358","messageId":"359","endLine":17,"endColumn":23},{"ruleId":"356","severity":1,"message":"376","line":27,"column":10,"nodeType":"358","messageId":"359","endLine":27,"endColumn":15},{"ruleId":"356","severity":1,"message":"377","line":59,"column":8,"nodeType":"358","messageId":"359","endLine":59,"endColumn":21},{"ruleId":"356","severity":1,"message":"378","line":59,"column":23,"nodeType":"358","messageId":"359","endLine":59,"endColumn":39},{"ruleId":"356","severity":1,"message":"379","line":61,"column":8,"nodeType":"358","messageId":"359","endLine":61,"endColumn":29},{"ruleId":"356","severity":1,"message":"380","line":61,"column":31,"nodeType":"358","messageId":"359","endLine":61,"endColumn":55},{"ruleId":"356","severity":1,"message":"381","line":63,"column":8,"nodeType":"358","messageId":"359","endLine":63,"endColumn":20},{"ruleId":"356","severity":1,"message":"382","line":63,"column":22,"nodeType":"358","messageId":"359","endLine":63,"endColumn":35},{"ruleId":"352","replacedBy":"383"},{"ruleId":"354","replacedBy":"384"},{"ruleId":"356","severity":1,"message":"385","line":31,"column":7,"nodeType":"358","messageId":"359","endLine":31,"endColumn":20},{"ruleId":"356","severity":1,"message":"386","line":32,"column":7,"nodeType":"358","messageId":"359","endLine":32,"endColumn":21},{"ruleId":"356","severity":1,"message":"387","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":18},{"ruleId":"356","severity":1,"message":"357","line":20,"column":14,"nodeType":"358","messageId":"359","endLine":20,"endColumn":21},{"ruleId":"356","severity":1,"message":"360","line":20,"column":22,"nodeType":"358","messageId":"359","endLine":20,"endColumn":27},{"ruleId":"388","severity":1,"message":"389","line":52,"column":1,"nodeType":"390","messageId":"391","endLine":61,"endColumn":4},{"ruleId":"361","severity":1,"message":"362","line":138,"column":19,"nodeType":"363","messageId":"364","endLine":138,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":10,"column":16,"nodeType":"363","messageId":"364","endLine":10,"endColumn":18},{"ruleId":"361","severity":1,"message":"362","line":11,"column":20,"nodeType":"363","messageId":"364","endLine":11,"endColumn":22},{"ruleId":"361","severity":1,"message":"362","line":17,"column":26,"nodeType":"363","messageId":"364","endLine":17,"endColumn":28},{"ruleId":"392","severity":1,"message":"393","line":24,"column":14,"nodeType":"394","messageId":"395","endLine":24,"endColumn":31},{"ruleId":"361","severity":1,"message":"362","line":25,"column":20,"nodeType":"363","messageId":"364","endLine":25,"endColumn":22},{"ruleId":"361","severity":1,"message":"396","line":25,"column":55,"nodeType":"363","messageId":"364","endLine":25,"endColumn":57},{"ruleId":"361","severity":1,"message":"362","line":31,"column":26,"nodeType":"363","messageId":"364","endLine":31,"endColumn":28},{"ruleId":"361","severity":1,"message":"396","line":31,"column":63,"nodeType":"363","messageId":"364","endLine":31,"endColumn":65},{"ruleId":"397","severity":1,"message":"398","line":25,"column":15,"nodeType":"399","messageId":"400","endLine":35,"endColumn":16},{"ruleId":"365","severity":1,"message":"366","line":58,"column":51,"nodeType":"367","messageId":"368","endLine":58,"endColumn":53},{"ruleId":"365","severity":1,"message":"366","line":80,"column":53,"nodeType":"367","messageId":"368","endLine":80,"endColumn":55},{"ruleId":"361","severity":1,"message":"362","line":40,"column":75,"nodeType":"363","messageId":"364","endLine":40,"endColumn":77},{"ruleId":"361","severity":1,"message":"362","line":41,"column":87,"nodeType":"363","messageId":"364","endLine":41,"endColumn":89},{"ruleId":"361","severity":1,"message":"396","line":43,"column":27,"nodeType":"363","messageId":"364","endLine":43,"endColumn":29},{"ruleId":"361","severity":1,"message":"396","line":45,"column":31,"nodeType":"363","messageId":"364","endLine":45,"endColumn":33},{"ruleId":"356","severity":1,"message":"401","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":18},{"ruleId":"356","severity":1,"message":"402","line":2,"column":19,"nodeType":"358","messageId":"359","endLine":2,"endColumn":28},{"ruleId":"356","severity":1,"message":"403","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":13},{"ruleId":"356","severity":1,"message":"357","line":15,"column":12,"nodeType":"358","messageId":"359","endLine":15,"endColumn":19},{"ruleId":"356","severity":1,"message":"360","line":15,"column":20,"nodeType":"358","messageId":"359","endLine":15,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":14,"column":12,"nodeType":"358","messageId":"359","endLine":14,"endColumn":19},{"ruleId":"356","severity":1,"message":"360","line":14,"column":20,"nodeType":"358","messageId":"359","endLine":14,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":22,"column":14,"nodeType":"358","messageId":"359","endLine":22,"endColumn":21},{"ruleId":"356","severity":1,"message":"360","line":22,"column":22,"nodeType":"358","messageId":"359","endLine":22,"endColumn":27},{"ruleId":"361","severity":1,"message":"362","line":30,"column":61,"nodeType":"363","messageId":"364","endLine":30,"endColumn":63},{"ruleId":"356","severity":1,"message":"404","line":54,"column":7,"nodeType":"358","messageId":"359","endLine":54,"endColumn":12},{"ruleId":"388","severity":1,"message":"389","line":56,"column":1,"nodeType":"390","messageId":"391","endLine":65,"endColumn":4},{"ruleId":"361","severity":1,"message":"362","line":142,"column":19,"nodeType":"363","messageId":"364","endLine":142,"endColumn":21},{"ruleId":"352","replacedBy":"405"},{"ruleId":"354","replacedBy":"406"},{"ruleId":"356","severity":1,"message":"407","line":1,"column":15,"nodeType":"358","messageId":"359","endLine":1,"endColumn":23},{"ruleId":"356","severity":1,"message":"408","line":1,"column":24,"nodeType":"358","messageId":"359","endLine":1,"endColumn":38},{"ruleId":"356","severity":1,"message":"403","line":5,"column":10,"nodeType":"358","messageId":"359","endLine":5,"endColumn":13},{"ruleId":"361","severity":1,"message":"362","line":127,"column":19,"nodeType":"363","messageId":"364","endLine":127,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":127,"column":19,"nodeType":"363","messageId":"364","endLine":127,"endColumn":21},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.",["409"],["410"],"'moreButtonRef' is assigned a value but never used.","'isMoreMenuOpen' is assigned a value but never used.","'useTheme' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","'gql' is defined but never used.","'theme' is assigned a value but never used.",["409"],["410"],"'useQuery' is defined but never used.","'ApolloProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]